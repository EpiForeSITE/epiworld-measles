---
format: gfm
---


The theorerical R0 for the mixing model is given by the following:

```math
\mathcal{R}_0 = (\vec{n}/n)^{\text{t}}\times\left\{\frac{M_{\cdot i}\times \vec{n}\times p_t}{p_r}\right\}_i
```

```{r}
r0_mixing <- function(contact_mat, n_vec, p_t, p_r, crate) {
  
  n <- sum(n_vec)
  (rbind(n_vec) / n) %*%
    (contact_mat %*% (cbind(n_vec) * 0 + crate) * p_t / p_r)

}
```

```{r}
#| label: loading-pkgs
library(epiworldR)
library(data.table)
library(ggplot2)
```


```{r}
#| label: toy-example
# Creating populations
sizes <- c(300, 500, 5000)
school1 <- entity("School 1", sizes[1], as_proportion = FALSE)
school2 <- entity("School 2", sizes[2], as_proportion = FALSE)
rest    <- entity("18+", sizes[3], as_proportion = FALSE)

# Creating the row-stochastic mixing matrix
cmatrix <- c(
  c(0.8, 0.1, 0.1), # School 1
  c(0.1, 0.8, 0.1), # School 2
  c(0.05, 0.05, 0.9)  # Rest
) |> matrix(byrow = TRUE, nrow = 3)

N <- sum(sizes)
mixing_model <- ModelSEIRMixing(
  name = "Mixing example",
  n = N,
  prevalence = 2/N,
  contact_rate = 2.5,
  contact_matrix = cmatrix, # * 0 + 1/3,
  transmission_rate = 0.1,
  recovery_rate = 1/7,
  incubation_days = 14
)

# Adding the entities
mixing_model |>
  add_entity(school1) |>
  add_entity(school2) |>
  add_entity(rest)
```

```{r}
#| label: Running-multiple
saver <- make_saver("total_hist", "reproductive")
set.seed(3312)
run_multiple(
  mixing_model, ndays = 60, nsims = 1000, saver = saver,
  nthreads = 10
)

dat <- run_multiple_get_results(mixing_model) |>
  lapply(data.table::data.table)
```


```{r}
#| label: Computing R0
r0 <- dat$reproductive[source_exposure_date == 0 & source != -1, ]

R0_naive <- get_param(mixing_model, "Contact rate") * 
  get_param(mixing_model, "Prob. Transmission") /
  get_param(mixing_model, "Prob. Recovery")

sprintf(
  "Mean R0: %.2f [%.2f, %.2f] (naive: %.2f)",
  mean(r0$rt),
  quantile(r0$rt, 0.025),
  quantile(r0$rt, 0.975),
  R0_naive
)

ggplot(r0, aes(x = rt)) +
  geom_histogram(bins = 50) +
  labs(
    title = "R0 distribution",
    x = "R0",
    y = "Count"
  ) +
  theme_minimal()

r0_mixing(
  contact_mat = cmatrix, #* 0 + 1/3,
  n_vec = sizes,
  p_t = get_param(mixing_model, "Prob. Transmission"),
  p_r = get_param(mixing_model, "Prob. Recovery"),
  crate = get_param(mixing_model, "Contact rate")
)
```

